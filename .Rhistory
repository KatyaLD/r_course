install.packages("tinytex")
tinytex::install_tinytex()
popular_packs <- c('babel-russian', 'cyrillic', 'cm-super',
'lh', 'makecmds', 'polyglossia', 'ulem',
'siunitx', 'multirow', 'xcolor', 'colortbl')
tinytex::tlmgr_install(popular_packs)
devtools::install_github('bdemeshev/azbuka')
install.packages("patchwork")
library(tidyverse) # обработка данных, графики...
library(skimr) # описательные статистики
library(rio) # импорт фантастического количества форматов данных
library(broom) # метла превращает результаты оценивания моделей в таблички
library(Ecdat) # много-много разных наборов данных
library(ISLR) # ещё данные
library(sandwich) # оценка Var для гетероскедастичности
library(caret) # пакет для подбора параметров разных моделей
library(FFtrees) # быстрые деревья
library(margins) # для подсчёта предельных эффектов
library(rpart.plot) # для картинок деревьев
library(plotROC) # визуализация ROC-кривой
install.packages(c("ISLR", "FFTrees", "margins", "rpart.plot", "plotROC"))
library(ISLR) # ещё данные
library(sandwich) # оценка Var для гетероскедастичности
library(caret) # пакет для подбора параметров разных моделей
library(FFtrees) # быстрые деревья
library(margins) # для подсчёта предельных эффектов
library(rpart.plot) # для картинок деревьев
library(plotROC) # визуализация ROC-кривой
install.packages("FFTrees")
library(FFtrees) # быстрые деревья
install.packages("FFTrees")
library(FFtrees) # быстрые деревья
library(FFTrees) # быстрые деревья
setwd("C:/Users/HSE ISSEK/Desktop/R course/R_course_mywork/r_course")
educ <- import('data/xAPI-Edu-Data.csv')
educ <- import('xAPI-Edu-Data.csv')
skim(educ)
glimpse(educ)
educ_logit <- mutate(educ, y = fct_collapse(Class, H = c('M', 'H')))
educ_fct <- mutate_if(educ, is.character, factor)
set.seed(777)
train_rows <- createDataPartition(educ_fct$y, p = 0.8, list = FALSE)
educ_fct <- mutate_if(educ, is.character, factor)
set.seed(777)
train_rows <- createDataPartition(educ_fct$y, p = 0.8, list = FALSE)
educ_logit <- mutate(educ, y = fct_collapse(Class, H = c('M', 'H')))
educ_fct <- mutate_if(educ, is.character, factor)
set.seed(777)
train_rows <- createDataPartition(educ_fct$y, p = 0.8, list = FALSE)
educ_fct <- mutate_if(educ_logit, is.character, factor)
set.seed(777)
train_rows <- createDataPartition(educ_fct$y, p = 0.8, list = FALSE)
educ_train <- educ_fct[train_rows, ]
educ_test <- educ_fct[-train_rows, ]
educ_lmodel_glm <- glm(data = educ_train, y ~ gender + SectionID + raisedhands, family = binomial(link = 'logit'))
summary(educ_lmodel_glm)
summary(educ_lmodel_glm)
educ_margins <- margins(educ_lmodel_glm)
summary(educ_margins)
pred_educ_vis <- ggpredict(educ_lmodel_glm, terms = c('raisedhands', 'gender'))
install.packages("ggeffects")
library(ggeffects)
pred_educ_vis <- ggpredict(educ_lmodel_glm, terms = c('raisedhands', 'gender'))
plot(pred_educ_vis)
educ_lmodel <- train(data = educ_train, y ~ gender + SectionID + raisedhands, family = binomial(link = 'logit'), method = 'glm')
summary(educ_lmodel)
educ_pred <- predict(educ_lmodel, newdata = educ_test)
head(educ_pred)
educ_prob <- predict(educ_lmodel, newdata = educ_test, type = 'prob')
head(educ_prob)
confusionMatrix(data = educ_pred, reference = educ_test$y)
install.packages("ranger")
install.packages("MLmetrics")
tree_model <- train(y ~ . - Class, data = educ_test,
method = 'rpart2',
na.action = na.omit)
rpart.plot(tree_model$finalModel)
